<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonAboutUs" xml:space="preserve">
    <value>About us</value>
  </data>
  <data name="ButtonAdminMenu" xml:space="preserve">
    <value>AdminMenu</value>
  </data>
  <data name="ButtonBack" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="ButtonBuy" xml:space="preserve">
    <value>Buy</value>
  </data>
  <data name="ButtonCreate" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="ButtonCreateRoom" xml:space="preserve">
    <value>Create room</value>
  </data>
  <data name="ButtonFind" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="ButtonFinder" xml:space="preserve">
    <value>Find an order</value>
  </data>
  <data name="ButtonLoad" xml:space="preserve">
    <value>Load image</value>
  </data>
  <data name="ButtonShop" xml:space="preserve">
    <value>Shop</value>
  </data>
  <data name="ButtonWatchBook" xml:space="preserve">
    <value>Watch book</value>
  </data>
  <data name="HeaderContact" xml:space="preserve">
    <value>Enter your contact details</value>
  </data>
  <data name="HeaderSE" xml:space="preserve">
    <value>Select the start and end date of the booking</value>
  </data>
  <data name="LabelAcessKey" xml:space="preserve">
    <value>Order access key:</value>
  </data>
  <data name="LabelBookBefore" xml:space="preserve">
    <value>Book before</value>
  </data>
  <data name="LabelBookedBefore" xml:space="preserve">
    <value>Booked before</value>
  </data>
  <data name="LabelBookedFrom" xml:space="preserve">
    <value>Booked from</value>
  </data>
  <data name="LabelBookFrom" xml:space="preserve">
    <value>Book from</value>
  </data>
  <data name="LabelCharacteristic" xml:space="preserve">
    <value>Characteristic</value>
  </data>
  <data name="LabelCity" xml:space="preserve">
    <value>City:</value>
  </data>
  <data name="LabelClarification" xml:space="preserve">
    <value>Clarification of the order</value>
  </data>
  <data name="LabelCodeOrder" xml:space="preserve">
    <value>Enter the order code</value>
  </data>
  <data name="LabelCost" xml:space="preserve">
    <value>Cost:</value>
  </data>
  <data name="LabelCount" xml:space="preserve">
    <value>Count of rooms:</value>
  </data>
  <data name="LabelDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="LabelEmail" xml:space="preserve">
    <value>Customer's email:</value>
  </data>
  <data name="LabelLocation" xml:space="preserve">
    <value>Location:</value>
  </data>
  <data name="LabelNomber" xml:space="preserve">
    <value>Order number:</value>
  </data>
  <data name="LabelNomOrder" xml:space="preserve">
    <value>Enter the order number:</value>
  </data>
  <data name="LabelNotFound" xml:space="preserve">
    <value>The order was not found</value>
  </data>
  <data name="LabelNotFoundNoOrder" xml:space="preserve">
    <value>Not found</value>
  </data>
  <data name="LabelPhone" xml:space="preserve">
    <value>Customer's number:</value>
  </data>
  <data name="LabelPricesB" xml:space="preserve">
    <value>Prices before</value>
  </data>
  <data name="LabelPricesF" xml:space="preserve">
    <value>Prices from</value>
  </data>
  <data name="LabelRemeber" xml:space="preserve">
    <value>. Remeber him!</value>
  </data>
  <data name="LabelRoomNumber" xml:space="preserve">
    <value>Room's nomber:</value>
  </data>
  <data name="LabelWarning" xml:space="preserve">
    <value>After clicking on the buy button and confirming the payment, a code will appear for your number. Remember him!!!</value>
  </data>
  <data name="LabelWelcome" xml:space="preserve">
    <value>Welcome!!!</value>
  </data>
  <data name="MessageCB" xml:space="preserve">
    <value>You can't go back!</value>
  </data>
  <data name="MessBChooseDate" xml:space="preserve">
    <value>Choose a date!</value>
  </data>
  <data name="MessBWarning" xml:space="preserve">
    <value>Warning!</value>
  </data>
  <data name="ProgramName" xml:space="preserve">
    <value>Hotel</value>
  </data>
  <data name="TextAboutUs" xml:space="preserve">
    <value>This program is designed to develop programming skills and show the possibilities of these skills. The program is not designed to offend anyone or steal anyone's ideas.</value>
  </data>
</root>